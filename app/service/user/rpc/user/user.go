// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package user

import (
	"context"

	"go-zero-demo/app/service/user/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetInfoByPnumReps = pb.GetInfoByPnumReps
	GetInfoByPnumReq  = pb.GetInfoByPnumReq
	LoginReps         = pb.LoginReps
	LoginReq          = pb.LoginReq
	RegisterReq       = pb.RegisterReq
	RegisterRes       = pb.RegisterRes
	SendVCodeReq      = pb.SendVCodeReq
	SendVCodeRes      = pb.SendVCodeRes

	User interface {
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error)
		SendVCode(ctx context.Context, in *SendVCodeReq, opts ...grpc.CallOption) (*SendVCodeRes, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReps, error)
		GetInfoByPnum(ctx context.Context, in *GetInfoByPnumReq, opts ...grpc.CallOption) (*GetInfoByPnumReps, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) SendVCode(ctx context.Context, in *SendVCodeReq, opts ...grpc.CallOption) (*SendVCodeRes, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.SendVCode(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginReps, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) GetInfoByPnum(ctx context.Context, in *GetInfoByPnumReq, opts ...grpc.CallOption) (*GetInfoByPnumReps, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.GetInfoByPnum(ctx, in, opts...)
}
