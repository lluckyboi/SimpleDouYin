// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"SimpleDouYin/app/service/video/rpc/internal/logic"
	"SimpleDouYin/app/service/video/rpc/internal/svc"
	"SimpleDouYin/app/service/video/rpc/pb"
)

type VideoServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedVideoServiceServer
}

func NewVideoServiceServer(svcCtx *svc.ServiceContext) *VideoServiceServer {
	return &VideoServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServiceServer) Feed(ctx context.Context, in *pb.FeedReq) (*pb.FeedResp, error) {
	l := logic.NewFeedLogic(ctx, s.svcCtx)
	return l.Feed(in)
}

func (s *VideoServiceServer) Publish(ctx context.Context, in *pb.PublishReq) (*pb.PublishResp, error) {
	l := logic.NewPublishLogic(ctx, s.svcCtx)
	return l.Publish(in)
}

func (s *VideoServiceServer) PublishList(ctx context.Context, in *pb.PublishListReq) (*pb.PublishListResp, error) {
	l := logic.NewPublishListLogic(ctx, s.svcCtx)
	return l.PublishList(in)
}
